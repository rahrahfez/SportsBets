AUTH API  
  - api/auth/login
    - POST login user, returns Unauthorized(401) if user is not found
    - returns response with encoded jwt that gets decoded on the front end

USER API
  - api/users
    - GET all users

  - api/users/:id
    - GET user by id
    - Includes intial information such as available balance, and current/accepted wagers.

  - api/users/wagers
    -GET all wagers that belong to the user

  - api/users/:id/getbalance
    - GET available balance of user

WAGER API
  - api/wager
    - GET all wagers

  - api/wager/:userid 
    -GET all wagers by user id

  - api/wager/:id
    -GET all wagers by id

  - api/numbergenerator/create
    - POST a new wager

  - api/numbergenerator/update
    - PUT a wager to allow user to accept wager

